# module_10_2.py

# Домашнее задание по теме "Потоки на классах"

# Задача "За честь и отвагу!"

from threading import Thread, Lock
from time import sleep


# Создайте класс Knight, наследованный от Thread, объекты которого будут обладать следующими свойствами:
class Knight(Thread):
    # Рыцарь сражается до тех пор, пока не повергнет всех врагов (у всех потоков их 100).
    total_enemies = 100
    lock = Lock()  # Создаем lock для синхронизации.
    # Только один поток может выводить информацию в консоль в текущий момент времени.

    def __init__(self, name, power):
        super().__init__()
        # Атрибут name - имя рыцаря. (str)
        self.name = name
        # Атрибут power - сила рыцаря. (int)
        self.power = power
        self.days_fought = 0

    # А также метод run, в котором рыцарь будет сражаться с врагами:
    def run(self):
        enemies_left = Knight.total_enemies
        with Knight.lock:  # Один поток выводит информацию в консоль
            # При запуске потока должна выводится надпись "<Имя рыцаря>, на нас напали!".
            print(f"{self.name}, на нас напали!")

        # Рыцарь сражается до тех пор, пока не повергнет всех врагов
        while enemies_left > 0:
            # Проходит 1 день сражения
            self.days_fought += 1
            # В процессе сражения количество врагов уменьшается на power текущего рыцаря.
            enemies_left -= self.power
            if enemies_left < 0:
                enemies_left = 0
            # По прошествию 1 дня сражения (1 секунды) выводится строка
            # "<Имя рыцаря> сражается <кол-во дней>..., осталось <кол-во воинов> воинов."
            with Knight.lock:  # Один поток выводит информацию в консоль
                print(f"{self.name}, сражается {self.days_fought} день(дня)..., осталось {enemies_left} воинов.")
            # 1 день сражения - 1 секунда.
            sleep(1)

        # После победы над всеми врагами выводится надпись
        # "<Имя рыцаря> одержал победу спустя <кол-во дней> дней(дня)!"
        with Knight.lock:  # Синхронизируем вывод
            print(f"{self.name} одержал победу спустя {self.days_fought} дней(дня)!")


# Алгоритм выполнения кода:
# Создание потоков
first_knight = Knight('Sir Lancelot', 10)
second_knight = Knight("Sir Galahad", 20)

# Запуск потоков и остановка текущего
first_knight.start()
second_knight.start()

first_knight.join()
second_knight.join()

# Вывод строки об окончании сражения
print("Все битвы закончились!")

# Вывод на консоль:
# Sir Lancelot, на нас напали!
# Sir Lancelot, сражается 1 день(дня)..., осталось 90 воинов.
# Sir Galahad, на нас напали!
# Sir Galahad, сражается 1 день(дня)..., осталось 80 воинов.
# Sir Galahad, сражается 2 день(дня)..., осталось 60 воинов.
# Sir Lancelot, сражается 2 день(дня)..., осталось 80 воинов.
# Sir Lancelot, сражается 3 день(дня)..., осталось 70 воинов.
# Sir Galahad, сражается 3 день(дня)..., осталось 40 воинов.
# Sir Lancelot, сражается 4 день(дня)..., осталось 60 воинов.
# Sir Galahad, сражается 4 день(дня)..., осталось 20 воинов.
# Sir Galahad, сражается 5 день(дня)..., осталось 0 воинов.
# Sir Lancelot, сражается 5 день(дня)..., осталось 50 воинов.
# Sir Lancelot, сражается 6 день(дня)..., осталось 40 воинов.
# Sir Galahad одержал победу спустя 5 дней(дня)!
# Sir Lancelot, сражается 7 день(дня)..., осталось 30 воинов.
# Sir Lancelot, сражается 8 день(дня)..., осталось 20 воинов.
# Sir Lancelot, сражается 9 день(дня)..., осталось 10 воинов.
# Sir Lancelot, сражается 10 день(дня)..., осталось 0 воинов.
# Sir Lancelot одержал победу спустя 10 дней(дня)!
# Все битвы закончились!
